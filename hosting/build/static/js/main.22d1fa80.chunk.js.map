{"version":3,"sources":["App.js","components/overview/overview.js","index.js"],"names":["useStyles","makeStyles","test","position","top","minHeight","minWidth","border","borderRadius","LandingGreeting","classes","Box","className","Container","data-anchor","style","color","Typography","variant","noWrap","id","App","React","Component","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","toolbar","mixins","TEXTOBJ","str","SideDrawer","CssBaseline","AppBar","Toolbar","left","Drawer","paper","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Overview","runTyper","a","len","length","custom_typer","i","typer","cursor","block","blink","line","pause","back","end","$","remove","this","main","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.22d1fa80.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { typography } from '@material-ui/system';\n\n// import ReactFullpage from '@fullpage/react-fullpage';\n// variable list for different strings to be typed, can add a color field later\n\nconst useStyles = makeStyles({\n    test: {\n        position: \"absolute\",\n        top: \"100px\",\n        minHeight: \"120px\",\n        minWidth: \"500px\",\n        border: \"2px solid grey\",\n        borderRadius: \"12px\",\n    }\n})\n\nconst LandingGreeting = () => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.test} >\n            <Container>\n                <div >\n                <div className=\"section aboutme\" data-anchor=\"aboutme\">\n                    <div className=\"opaque-bg animated fadeInDown\">\n                        <h1 style={{color: \"grey\"}}>SAM<span style={{color: \"#FF6363\"}}>\\</span>OLIVEIRA</h1>\n                        <Typography variant=\"h6\" noWrap>\n                            This is a full stack site. Have fun!\n                        </Typography>\n                    </div>\n                    <i id=\"moveDown\" className=\"fa fa-chevron-down fa-3x bounce\"></i>\n                </div>\n                </div>\n            </Container>\n        </Box>\n    )\n}\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <LandingGreeting />\n        )\n    }\n}\n\nexport default App;","\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider'; -- delete -- unused\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport $ from \"jquery\";\nimport typer from 'typer-js';\nimport \"typer-js/typer.css\";\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst TEXTOBJ = [\n  {str: \"This site is hosted on Google's Firebase and made with <span style={{color:'red'}} >React!</span>\"},\n  {str: \"Hello and welcome to my website!\"},\n  {str: \"Feel free to tell your friends about me :)\"},\n  {str: \"I am currently looking for a job, send me a message if you can help.\"},\n];\n\n\nfunction SideDrawer() {\n  const classes = useStyles();\n  \n  return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap>\n            SamOliveira.dev\n            </Typography>\n            <Typography id={'writer'} style={{position: \"absolute\",left: \"220px\"}} variant=\"h6\" noWrap>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.toolbar} />\n          <List>\n            {['landing', 'about me', 'projects', 'resume/hire me'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n            <div id=\"root\"></div>\n          <div className={classes.toolbar} />\n          \n        </main>\n      </div>\n    );\n  }\n\nexport default class Overview extends React.Component {\n\n  runTyper = async () => {\n    const len = TEXTOBJ.length;\n    let i = 0;\n\n    const custom_typer = (i, len) => {\n        const elem = \"#writer\";\n        if (i === len) i = 0;\n        typer(elem, 50)\n        .cursor({block: false, blink: 'hard', color: 'red'})\n        .line(TEXTOBJ[i].str)\n        .pause(1000)\n        .back(TEXTOBJ[i].str.length)\n        .end(true, () => {\n            custom_typer(++i, len);\n        });\n        $(\".white-space\").remove();\n    }\n\n    custom_typer(i, len);\n}\n\n  componentDidMount() {\n    this.runTyper();\n  }\n\n  render() {\n    return (\n      <SideDrawer/>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport HeaderBar from './components/overview/overview.js'\n\n\nconst main = document.getElementById('main');\nReactDOM.render(<HeaderBar/>, main);\n\n\n// const Context = () => (\n    // \t<ProfileContext.Provider value={new Profile()} >\n    // \t\t<App />\n    // \t</ProfileContext.Provider>\n    // );\nconst root = document.getElementById('root');\nReactDOM.render(<App/>, root);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}